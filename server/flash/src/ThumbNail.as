/* * ThumbNail.as *  * Copyright (c) 2012 Hendrik Holtmann * All rights reserved. *  * Redistribution and use in source and binary forms, with or without * modification, are permitted provided that the following conditions * are met: *  * Redistributions of source code must retain the above copyright notice, * this list of conditions and the following disclaimer. *  * Redistributions in binary form must reproduce the above copyright * notice, this list of conditions and the following disclaimer in the * documentation and/or other materials provided with the distribution. *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. * */package  {		import flash.display.Sprite;	import com.greensock.TweenLite;	import flash.events.*;	import flash.ui.*;	public class ThumbNail extends Sprite{					public var index:Number;				public function ThumbNail() {//			this.graphics.beginFill(0xEBEBEB);			this.graphics.beginFill(0xA9A9A9);			this.graphics.drawRect(0,0,75,75);			this.graphics.endFill();			this.addEventListener(MouseEvent.CLICK, thumbMouseClick);			this.addEventListener(MouseEvent.MOUSE_OVER, thumbMouseOver);			this.addEventListener(MouseEvent.MOUSE_OUT, thumbMouseOut);			// constructor code		}						private function thumbMouseClick(e:MouseEvent):void		{			this.dispatchEvent(new Event("thumbClicked"));		}						private function thumbMouseOver(e:MouseEvent):void		{			Mouse.cursor=MouseCursor.HAND;			TweenLite.to(this,0.5,{alpha:0.5});		}						private function thumbMouseOut(e:MouseEvent):void		{			Mouse.cursor=MouseCursor.AUTO;						TweenLite.to(this,0.5,{alpha:1.0});		}	}	}